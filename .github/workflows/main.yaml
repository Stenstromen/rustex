name: RustEx CI

on:
  release:
    types: [created]

permissions:
  contents: write
  actions: read

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: x86_64-apple-darwin
            os: macos-latest
            arch: x86_64
            name: Darwin_x86_64
          - target: aarch64-apple-darwin
            os: macos-latest
            arch: arm64
            name: Darwin_arm64
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            arch: x86_64
            name: Linux_x86_64

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install libssl-dev (Linux x86_64)
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config musl-tools
          wget https://www.openssl.org/source/openssl-3.0.10.tar.gz
          tar xzvf openssl-3.0.10.tar.gz
          cd openssl-3.0.10
          ./config no-shared no-tests
          make -j$(nproc)
          sudo make install
          echo "OPENSSL_STATIC=1" >> $GITHUB_ENV
          echo "OPENSSL_LIB_DIR=/usr/local/lib64" >> $GITHUB_ENV
          echo "OPENSSL_INCLUDE_DIR=/usr/local/include" >> $GITHUB_ENV

      - name: Set up Rust
        run: |
          rustup install stable
          rustup target add ${{ matrix.target }}

      - name: Run cargo test
        run: cargo test

      - name: Build binary
        run: |
          cargo build --release --target ${{ matrix.target }}

      - name: Package binary
        run: |
          tar -czvf rustex_${{ matrix.name }}.tar.gz -C ./target/${{ matrix.target }}/release rustex

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: rustex_${{ matrix.name }}.tar.gz
          path: rustex_${{ matrix.name }}.tar.gz

  checksum:
    needs: build
    runs-on: ubuntu-latest
    env:
      VERSIONTAG: ${{ github.event.release.tag_name }}
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          path: artifacts/

      - name: Generate checksums
        run: |
          for file in artifacts/*.tar.gz/*.tar.gz; do
            sha256sum "$file" | awk '{gsub(/.*\//, "", $2); print $1 "  " $2}' >> rustex_${{ env.VERSIONTAG }}_checksums.txt
          done

      - name: Upload checksum file
        uses: actions/upload-artifact@v4
        with:
          name: rustex_${{ env.VERSIONTAG }}_checksums.txt
          path: rustex_${{ env.VERSIONTAG }}_checksums.txt

  upload-release-assets:
    needs: [build, checksum]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          path: ./artifacts

      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.3.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            ./artifacts/rustex_${{ github.event.release.tag_name }}_checksums.txt/rustex_${{ github.event.release.tag_name }}_checksums.txt
            ./artifacts/rustex_Darwin_x86_64.tar.gz/rustex_Darwin_x86_64.tar.gz
            ./artifacts/rustex_Darwin_arm64.tar.gz/rustex_Darwin_arm64.tar.gz
            ./artifacts/rustex_Linux_x86_64.tar.gz/rustex_Linux_x86_64.tar.gz
